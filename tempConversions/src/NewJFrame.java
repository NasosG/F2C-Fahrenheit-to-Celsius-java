import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class NewJFrame extends javax.swing.JFrame {

    public NewJFrame() {

        initComponents();

        this.setDefaultCloseOperation(NewJFrame.DO_NOTHING_ON_CLOSE);
        
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int choice = JOptionPane.showConfirmDialog(null, "Do you really want to exit the application ?",
                        "Confirm Exit", JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);
                if (choice == JOptionPane.YES_OPTION) {
                    e.getWindow().dispose();
                    System.out.println("Chose to exit");
                } else 
                    System.out.println("Chose to stay");
            }
        });
        
           

           
    }
     DocumentListener a = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {

                if(!jTextField1.getText().equals("") && isNumber(jTextField1.getText()))
                {
                    CelsiusToFahrenheit();
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
            if (jTextField1.getText().equals("")) jTextField2.setText(null);
                if(isNumber(jTextField1.getText()))
                {
                    CelsiusToFahrenheit();
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                if(!jTextField1.getText().equals("") && isNumber(jTextField1.getText()))
                {
                    CelsiusToFahrenheit();
                }
            }
        };
           
           
            DocumentListener b = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                if(!jTextField2.getText().equals("") && isNumber(jTextField2.getText()))
                {
                    FahrenheitToCelsius();
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
            if (jTextField2.getText().equals("")) jTextField1.setText(null);
                if(isNumber(jTextField2.getText()))
                {
                    FahrenheitToCelsius();
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                if(!jTextField2.getText().equals("") && isNumber(jTextField2.getText()))
                {
                    FahrenheitToCelsius();
                }
            }
        };
        
       
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Temperature Conversions");
        setMinimumSize(new java.awt.Dimension(350, 220));
        setPreferredSize(new java.awt.Dimension(350, 220));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 25));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("Clear All");
        jButton3.setMaximumSize(new java.awt.Dimension(100, 30));
        jButton3.setMinimumSize(new java.awt.Dimension(100, 30));
        jButton3.setPreferredSize(new java.awt.Dimension(100, 30));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel1.setPreferredSize(new java.awt.Dimension(171, 100));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Celsius");
        jLabel1.setMaximumSize(new java.awt.Dimension(60, 15));
        jLabel1.setMinimumSize(new java.awt.Dimension(60, 15));
        jLabel1.setPreferredSize(new java.awt.Dimension(60, 14));
        jPanel1.add(jLabel1);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setMinimumSize(new java.awt.Dimension(10, 20));
        jTextField1.setPreferredSize(new java.awt.Dimension(60, 22));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jPanel1.add(jTextField1);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setPreferredSize(new java.awt.Dimension(60, 22));
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2FocusLost(evt);
            }
        });
        jPanel1.add(jTextField2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Fahrenheit");
        jLabel2.setMaximumSize(new java.awt.Dimension(70, 20));
        jLabel2.setMinimumSize(new java.awt.Dimension(70, 20));
        jLabel2.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel1.add(jLabel2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText(null);
        jTextField2.setText(null);    
        jTextField1.grabFocus();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.getDocument().addDocumentListener(a);
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        jTextField1.getDocument().removeDocumentListener(a);
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        jTextField2.getDocument().addDocumentListener(b);
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        jTextField2.getDocument().removeDocumentListener(b);
    }//GEN-LAST:event_jTextField2FocusLost

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
     
    
    private void CelsiusToFahrenheit()
    {     
        int f;
        String text = jTextField1.getText();
        f = (int)(9*(Double.parseDouble(text))/5+32);
        jTextField2.setText(f + "");
        System.out.println(f);
    }
    
    
    private void FahrenheitToCelsius()
    { 
        int c;
        String text = jTextField2.getText();
        c = (int)(5*((Double.parseDouble(text))-32)/9);
        jTextField1.setText(c + "");
        System.out.println(c);
    }
     
     
    private void Error( String text )
    {
         Toolkit.getDefaultToolkit().beep(); 
         System.out.println("Error in" + text + ". Empty String or not numeric input");
         //create a message dialog with an error icon
         JOptionPane.showMessageDialog(this, "Error in" + text + ". Empty String or not numeric input", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    
    private static boolean isNumber(String str)  
    {  
        try  
        {  
            double d = Double.parseDouble(str);  
        }  
        catch(NumberFormatException nfe)  
        {  
            return false;  
        }  
        return true;  
    }
    

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}




